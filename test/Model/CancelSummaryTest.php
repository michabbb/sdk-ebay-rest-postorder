<?php
/**
 * CancelSummaryTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  macropage\SDKs\ebay\rest\postorder
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * eBay Cancellation Search API
 *
 * API for searching eBay order cancellations.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace macropage\SDKs\ebay\rest\postorder\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * CancelSummaryTest Class Doc Comment
 *
 * @category    Class
 * @description CancelSummary
 * @package     macropage\SDKs\ebay\rest\postorder
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class CancelSummaryTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "CancelSummary"
     */
    public function testCancelSummary()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buyerLoginName"
     */
    public function testPropertyBuyerLoginName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "buyerResponseDueDate"
     */
    public function testPropertyBuyerResponseDueDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cancelCloseDate"
     */
    public function testPropertyCancelCloseDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cancelCloseReason"
     */
    public function testPropertyCancelCloseReason()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cancelId"
     */
    public function testPropertyCancelId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cancelReason"
     */
    public function testPropertyCancelReason()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cancelRequestDate"
     */
    public function testPropertyCancelRequestDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cancelState"
     */
    public function testPropertyCancelState()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "lineItems"
     */
    public function testPropertyLineItems()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "lastModifiedDate"
     */
    public function testPropertyLastModifiedDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cancelStatus"
     */
    public function testPropertyCancelStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "legacyOrderId"
     */
    public function testPropertyLegacyOrderId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "marketplaceId"
     */
    public function testPropertyMarketplaceId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "partialOrderType"
     */
    public function testPropertyPartialOrderType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "paymentStatus"
     */
    public function testPropertyPaymentStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payoutRecoupInfo"
     */
    public function testPropertyPayoutRecoupInfo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "requestorType"
     */
    public function testPropertyRequestorType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "requestRefundAmount"
     */
    public function testPropertyRequestRefundAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sellerLoginName"
     */
    public function testPropertySellerLoginName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sellerResponseDueDate"
     */
    public function testPropertySellerResponseDueDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shipmentDate"
     */
    public function testPropertyShipmentDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
